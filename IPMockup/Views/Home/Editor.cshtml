@{
    ViewBag.Title = "About";
}
<link href="~/Content/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/jquery-ui.theme.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-2.1.4.min.js"></script>
<script src="~/Scripts/jquery-ui-1.11.4.js"></script>

<script src="~/Scripts/colpick.js"></script>
<link href="~/Content/colpick.css" rel="stylesheet"/>

<style>
    ul > li {
        list-style: none;
        padding-bottom: 10px;
    }
    .abso {
        position: absolute;
    }

    .zxc:hover {
        border: 1px solid black;
    }

</style>

<div style="height: 500px;" class="col-md-9">
    <div class="panel panel-default">
        <div id="content" class="panel-body" style="height: 520px;">

        </div>
    </div>
</div>
<div class="col-md-3" style=" padding: 5px; height: 500px;">
    <div class="panel panel-default">
        <div class="panel-heading">

            <i class="fa fa-gears"></i> Control Panel<br/>
            <div class="row">
                <div class="col-sm-2">
                    <label>Color</label>
                </div>
                <div class="col-sm-8">
                    <input type="text" class="form-control color" value="" placeholder="Pick Color" id="editorControlColor" data-ng-model="editorControlColor" data-ng-change="editorBGColor={'background-color':'#'+editorControlColor}; editorBoxColor={'border-color':'#'+editorControlColor}"/>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-2">
                    <label>Font Size</label>
                </div>
                <div class="col-sm-8">
                    <input type="text" class="form-control" value="" placeholder="00" id="editorTextSize" data-ng-model="editorTextSize" maxlength="2" />
                </div>
            </div>

            
       
        </div>
        <div class="panel-body" style="height: 400px; overflow-y: auto; overflow-x: hidden">              
            <ul>
                <li>
                    <label class="control-label">Button</label><br/>
                    <div data-ng-style="editorBGColor" class="btn btn-default element">BUTTON</div>
                </li>

                <hr/>

                <li>
                    <label class="control-label">Panel</label><br />
                    <div class="element">
                        <div class="panel panel-default">
                            <div class="panel-heading" data-ng-style="editorBGColor">

                            </div>
                            <div class="panel-body" style="background: whitesmoke">

                            </div>
                        </div>

                    </div>
                </li>

                <li>
                    <div class="element">
                        <div class="panel panel-default">
                            <div class="panel-heading" data-ng-style="editorBGColor">

                            </div>
                        </div>

                    </div>
                </li>

                <li>
                    <div>
                        <style>
                            .resizable {
                                background-position: top left;
                                width: 90px;
                                height: 90px;
                                border: black;
                            }
                        </style>
                        <div class="ui-state-active element resizable">
                            <h3 class="ui-widget-header" style="border: black; background: gray;" data-ng-style="editorBGColor">Header</h3>
                        </div>
                    </div>
                </li>

                <li>
                    <div>
                        <div class="ui-state-active element resizable" data-ng-style="editorBGColor" style="background: gray">                         
                        </div>
                    </div>
                </li>


                <hr />

                <li>
                    <label class="control-label">Carousel</label><br />
                    <div class="element">
                        @*@Html.Partial("_Carousel")*@
                        <div class="zxc">
                            <img src="~/Content/images/carousel.png" width="100%"/>
                        </div>
                    </div>
                </li>

                <hr />

                <li>
                    <label class="control-label">Textbox</label><br />
                    <div class="element">
                        <div class="input-group margin-bottom-sm">
                            <span data-ng-style="editorBoxColor" class="input-group-addon"><i class="fa fa-list fa-fw"></i></span>
                            <input data-ng-style="editorBoxColor" type="text" class="form-control" placeholder="Enter Text">
                        </div>
                    </div>
                </li>
                <li>
                    <div class="element">
                        <div class="input-group margin-bottom-sm">
                            <span data-ng-style="editorBoxColor" class="input-group-addon"><i class="fa fa-phone fa-fw"></i></span>
                            <input data-ng-style="editorBoxColor" type="text" class="form-control" placeholder="(614)123-1234">
                        </div>
                    </div>
                </li>
                <hr />
                <li>
                    <label class="control-label">Radio</label>
                    <div class="element">
                        {{editorTextSize}}
                        <input style="font-size: 100px;" type="radio" value="1">Radio 1<br>
                        <input data-ng-style="editorTextSize" type="radio" value="2">Radio 2
                    </div>
                </li>

                <li>
                    <label class="control-label">Dropdown</label>
                    <div class="element">
                        <select class="element">
                            <option value="volvo">-Select All-</option>
                            <option value="saab">Option 1</option>
                            <option value="mercedes">Option 2</option>
                            <option value="audi">Option 3</option>
                        </select>
                    </div>
                </li>

                <li>
                    <label class="control-label">Checkbox</label>
                    <div class="element">
                        <input type="checkbox" name="" value="" data-ng-style="editorTextSize"> Yes<br>
                        <input type="checkbox" name="" value="" data-ng-style="editorTextSize"> No
                    </div>
                </li>

             


            </ul>
        </div>
    </div>
    

</div>



<script>
    $(".remove").click(function (e) {
        e.remove();

    });

    $('.color').colpick({
        layout: 'hex',
        submit: 0,
        colorScheme: 'dark',
        onChange: function (hsb, hex, rgb, el, bySetColor) {
            $(el).css('background-color', '#' + hex);
            angular.element(el).triggerHandler('change');
            // Fill the text box just if the color was set using the picker, and not the colpickSetColor function.
            if (!bySetColor) $(el).val(hex);
        }
    });

    $(function () {
        $(document).on('click', '.remove',
        function () {
                $(this).remove();
        });

        $("#content").droppable({
            accept: '.element',
            drop: function (event, ui) {
                $(this).append($(ui.draggable).clone());
                $("#content .element").addClass("item abso remove");
                $(".item").removeClass("ui-draggable element");
                $(".item").draggable({
                    containment: '#content'
                });
                $(".item").resizable({
                    containment: '#content',
                    grid: 20
                });
            }
        });
        $(".element").draggable({
            helper: 'clone'
        });
        //$('.element').draggable({
        //    containment: '#content',            
        //    cursor: 'move',
        //    snap: '#content',
        //    grid: [20, 20],
        //    connectToSortable: "#content",            
        //    helper: 'clone',
        //    revert:true
        //});
        //$("#content").disableSelection();
    });   

    //$(".element").click(function () {
    //    $(this).clone().appendTo("#content");
    //});

    //function img_create(src, alt, title) {
    //    var img = IEWIN ? new Image() : document.createElement('img');
    //    img.src = src;
    //    if (alt != null) img.alt = alt;
    //    if (title != null) img.title = title;
    //    $('#content').appendChild(img);
    //}

</script>
